let express,Product,SERVER_ERROR;_743‍.x([["default",()=>_743‍.o]]);_743‍.w("express",[["default",["express"],function(v){express=v}]]);_743‍.w("../models/product",[["default",["Product"],function(v){Product=v}]]);_743‍.w("../models/ResponseHandler",[["SERVER_ERROR",["SERVER_ERROR"],function(v){SERVER_ERROR=v}]]);




const router = express.Router()

router.get('/', async(request, response) => {
    const listaProducts = await Product.find({})
    if(listaProducts.length < 2)
        response.status(200).json(listaProducts[0])
    else
    response.status(200).json(listaProducts)
})

router.post('/add', async(request, response) => {
    // console.log(request.body)
    const product = new Product(request.body)
    await product.save()
    response.status(200).json({status: 'OK'})
})

router.put('/edit', async(request, response) => {
    const {productToChange, data} = request.body
    const res = await Product.updateOne({_id: productToChange}, {$set: data})
    response.status(200).json({status: 'OK', backlog: JSON.stringify(res)})
})

// router.delete('/delete', async(request, response) => {
//     const productoToDelete = request.body
//     const res = await Product.deleteOne()
// })

router.get('/find', async(request, response) => {
    try{
        const product = await Product.findById(request.body)
    }catch(e){
        SERVER_ERROR(response)
    }
})
_743‍.d(router);