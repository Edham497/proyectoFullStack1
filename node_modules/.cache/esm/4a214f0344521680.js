let express,mongoose,cors,expressCspHeader,SELF,INLINE,NONE,settings,ProductRoutes,UserRoutes,UploadRoutes;_445‍.w("express",[["default",["express"],function(v){express=v}]]);_445‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_445‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_445‍.w("express-csp-header",[["expressCspHeader",["expressCspHeader"],function(v){expressCspHeader=v}],["SELF",["SELF"],function(v){SELF=v}],["INLINE",["INLINE"],function(v){INLINE=v}],["NONE",["NONE"],function(v){NONE=v}]]);_445‍.w("./data/settings.json",[["default",["settings"],function(v){settings=v}]]);_445‍.w("./routes/products",[["default",["ProductRoutes"],function(v){ProductRoutes=v}]]);_445‍.w("./routes/user",[["default",["UserRoutes"],function(v){UserRoutes=v}]]);_445‍.w("./routes/upload",[["default",["UploadRoutes"],function(v){UploadRoutes=v}]]);






//Routes




const app = express();
app.use(cors());
app.use(express.json());
app.use(expressCspHeader({
  directives: {
    'default-src': [SELF],
    'script-src': [SELF, INLINE, 'somehost.com'],
    'style-src': [SELF, 'mystyles.net'],
    'img-src': ['data:', 'images.com'],
    'worker-src': [NONE],
    'block-all-mixed-content': false
  },
  reportOnly: true
}))

mongoose
  .connect(
    `mongodb+srv://edham:${settings.pw}@proyectofullstack.xm1zv.mongodb.net/${settings.db}?retryWrites=true&w=majority`, {
    useUnifiedTopology: true,
    useNewUrlParser: true,
  }
  )
  .then((db) => console.log("DB connected"))
  .catch((err) => _445‍.g.console.error(err));

app.use('/products', ProductRoutes)
app.use('/users', UserRoutes)
app.use('/uploads', UploadRoutes)

app.set("port", process.env.PORT || 5000);

app.listen(app.get("port"), () => {
  _445‍.g.console.log("http://localhost:" + app.get("port"));
});
