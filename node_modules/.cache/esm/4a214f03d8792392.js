let express,mongoose,cors,settings,ProductRoutes,UserRoutes,AuthRoutes,FavoritosRoutes,ComprasRoutes;_d87‍.w("express",[["default",["express"],function(v){express=v}]]);_d87‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_d87‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_d87‍.w("./data/settings.json",[["default",["settings"],function(v){settings=v}]]);_d87‍.w("./routes/products",[["default",["ProductRoutes"],function(v){ProductRoutes=v}]]);_d87‍.w("./routes/user",[["default",["UserRoutes"],function(v){UserRoutes=v}]]);_d87‍.w("./routes/auth",[["default",["AuthRoutes"],function(v){AuthRoutes=v}]]);_d87‍.w("./routes/favoritos",[["default",["FavoritosRoutes"],function(v){FavoritosRoutes=v}]]);_d87‍.w("./routes/compras",[["default",["ComprasRoutes"],function(v){ComprasRoutes=v}]]);





//Routes


// import UploadRoutes from './routes/upload'




const app = express();
app.use(cors());
app.use(express.json());

mongoose
  .connect(
    `mongodb+srv://edham:${settings.pw}@proyectofullstack.xm1zv.mongodb.net/${settings.db}?retryWrites=true&w=majority`, {
      useUnifiedTopology: true,
      useNewUrlParser: true,
  }
  )
  .then((db) => console.log("DB connected"))
  .catch((err) => _d87‍.g.console.error(err));

app.use('/products', ProductRoutes)
app.use('/users', UserRoutes)
app.use('/auth', AuthRoutes)
app.use('/favoritos', FavoritosRoutes)
app.use('/compras', ComprasRoutes)

app.set("port", process.env.PORT || 5000);

app.listen(app.get("port"), () => {
  _d87‍.g.console.log("http://localhost:" + app.get("port"));
});
